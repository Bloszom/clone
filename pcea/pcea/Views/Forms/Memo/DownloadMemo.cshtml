@{
    ViewData["Title"] = ViewBag.title + "(" + ViewBag.OperatorId + ")";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    string link = ViewBag.link;

    string pdfFileName = $"{ViewData["Title"]} Memo";


    string err = "Memo download was unsuccesfull. Try again later.";
    <div class="small text-center bg-danger text-white w-75 m-auto p-2 mb-1 error" style="display: none">@err</div>

    string mesg = "Memo download was succesfull. Check your media";
    <div class="small text-center bg-success text-white w-75 m-auto p-2 mb-1 messg" style="display: none">@mesg</div>

}


@section Css {
    <link rel="stylesheet" href="~/dist/formeo.min.css" type="text/css" />
    <link rel="stylesheet" href="~/assets/summernote/summernote-bs4.css" type="text/css" />

    <style>

        #render-form {
            pointer-events: none;
        }

        .formeo-column a {
            pointer-events: visible;
        }

        .card {
            margin-bottom: 2px !important;
        }

        .btn-link {
            text-decoration: none !important;
            font-weight: bold;
        }

        .error {
            color: red;
        }

    </style>
}


<div id="accordion">
    <div class="card">
        <div class="card-header" style=" background-color:#E9ECEF" id="headingThree">
            <input value="@pdfFileName" class="filename" hidden/>
            <h5 class="mb-0">
                @if (ViewBag.Action == "PrintMemo")
                {
                    <button class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                        Find below the tariff memo and operator's submission.
                    </button>
                }
                else
                {
                    @if (ViewBag.MasterEntryId == null)
                    {
                        <button class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                            Tariff Submissions
                        </button>
                    }
                    else
                    {
                        <button class="btn btn-link collapsed pull-left" data-toggle="collapse" data-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                            Click here to preview submitted Tariff
                        </button>
                        <a href="~/Forms/ViewTariff/@ViewBag.MasterEntryId" class="text-danger text-small pull-right" target="_blank"> Click here to see @ViewBag.MasterEntryName</a>
                    }
                }

                @* <button id="btnPrint" type="button" data-toggle="modal" data-target="dvPrint" class="text-secondary btn btn-link close pull-right mr-3" title="Print this form"><i class="fa fa-2x fa-print"></i></button> *@
            </h5>
        </div>

        <div id="collapseThree" class="collapse show" aria-labelledby="headingThree" data-parent="#accordion">
            <div class="card-body" id="render-form2">
                @if (ViewBag.Action == "PrintMemo")
                {
                    <div class="" style="page-break-after:always;">
                        @if (@ViewBag.MemoContent == null)
                        {
                            <p class="text-danger text-bold p-2">There no memo content available.</p>
                        }
                        else
                        {
                            <h2 class="text-bold p-2"> Memo</h2>
                            <hr />
                            @Html.Raw(@ViewBag.MemoContent)
                        }
                    </div>
                }

                <div class="mb-3 mt-4" style="page-break-after:always;">

                    @if (ViewBag.TaskTrails != null)
                    {
                        <h2 class="p-2 mt-3 text-bold text-center">Task Trail</h2>
                        @*<hr/>*@

                        <div class="row mb-3">
                            <div class="col-lg-12">
                                <div class="table-responsive-sm p-0">
                                    <table class="table table-striped table-bordered table-sm">
                                        <thead>
                                            <tr class="text-center">
                                                <th>
                                                    Name
                                                </th>
                                                <th>
                                                    RoleId
                                                </th>
                                                <th>
                                                    DateAssigned
                                                </th>
                                                <th>
                                                    ActionId
                                                </th>
                                                <th>
                                                    Remarks
                                                </th>
                                                <th>
                                                    DateCompleted
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in ViewBag.TaskTrails)
                                            {
                                                <tr class="text-center">
                                                    <td>
                                                        @item.AdminFullName
                                                    </td>
                                                    <td>
                                                        @item.RoleId
                                                    </td>
                                                    <td>
                                                        @item.DateAssigned
                                                    </td>
                                                    <td>
                                                        @item.ActionId
                                                    </td>
                                                    <td>
                                                        @item.Remarks
                                                    </td>
                                                    <td>
                                                        @item.DateCompleted
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <div id="render-form" class="modal-body"></div>


                <div class="chatDiv row" style="page-break-after:always;">

                    @if (ViewBag.Messages.Count != 0)
                    {
                        <h2 class="mt-4 mb-3 p-2 text-bold msgHeader" style="page-break-after:always !important;">Message history</h2>

                        @foreach (var msg in ViewBag.Messages)
                        {
                            <div class="col-md-12" style="width:contain !important; page-break-after:always !important; ">
                                @if (msg.SentBy == "NCC")
                                {
                                    <div class="col-md-4 mt-3 mb-2 pull-right" style="background-color:lightgreen !important; border-radius:8px; width:fit-content;">
                                        <p class="text-bold text-dark mt-2">@msg.MessageBody</p>
                                        <span class="pull-right text-small">@msg.DateSent.ToString("dd-MMM-yyyy")</span>
                                    </div>
                                }
                                else @if (msg.SentBy == "OPERATOR")
                                {
                                    <div class="col-md-4 pull-left mt-3 mb-2" style="background-color:mistyrose !important; border-radius:8px; width:fit-content">
                                        <p class="text-bold text-dark mt-2">@msg.MessageBody</p>
                                        <span class="pull-right text-small">@msg.DateSent.ToString("dd-MMM-yyyy")</span>
                                    </div>
                                }
                            </div>
                        }
                    }
                </div>
            </div>

            <div id="form-loader" class="form-loader">
                <div class="text-center"><img src="~/img/loading.gif" /></div>
            </div>
        </div>
    </div>
</div>


@section Scripts {

    <script src="~/dist/formeo.min.js" type="text/javascript"></script>
    <script src="~/assets/summernote/summernote-bs4.min.js" type="text/javascript"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.3.2/html2canvas.min.js"></script>

    <script type="text/javascript">

        $(function () {
            $('.summernote').summernote({
                height: 500
            });
        });


        $('#btnPrint').click(function () {
            try {
                $('#render-form2').printThis({
                    importCSS: true,
                })
            }
            catch (e) {
                alert(e);
            }
        })

        function DisplayForm() {
            try {
                $('.form-loader').removeAttr('style');
                $('.modal-body').removeAttr('style');

                $('.form-loader').attr('style', 'display:none');
                $('.modal-body').attr('style', 'display:normal');
            } catch (e) {
            }
        }
        Array.prototype.contains = function (elem) {
            for (i in this) {
                if ($(this[i]).prop('tagName') == elem) return true;
            }
            return false;
        }
        function DisplayFormLoader() {
            try {
                $('.form-loader').removeAttr('style');
                $('.modal-body').removeAttr('style');

                $('.form-loader').attr('style', 'display:normal');
                $('.modal-body').attr('style', 'display:none');
            } catch (e) {
            }
        }

        function details(callback) {
            try {
                var url = window.location.pathname;
                var id = url.substring(url.lastIndexOf('/') + 1);
                DisplayFormLoader();
                $.ajax({
                    url: "/Forms/TDetails",
                    type: "POST",
                    data: { "entry": id },
                    dataType: 'json',
                    //contentType: 'application/json; charset=UTF-8',
                    success: function (response) {
                        if (response.template != '') {
                            $(".loader").attr('style', 'none');
                            $('#render-form').append(response.template);
                            //console.log(response.template);
                        } else {
                            var rendr = new FormeoRenderer({ renderContainer: '#render-form' });
                            rendr.render(JSON.parse(cnt));
                        }

                        //fill form
                        if (response.data != '') {
                            $.each(response.data, function (i, v) {
                                var input = $('#render-form').find('#' + v.fieldName);
                                if (input.attr('type') != 'file') {
                                    input.val(v.response);
                                }
                                else if (!input.siblings().toArray().contains('A') && v.response != "") {
                                    input.before('<a href="../../uploads/' + v.response + '" ' + v.response + ' class="text-primary d-table-cell" target="blank">Uploaded file Name is <b>' + v.response + '</b></a>');
                                }
                            });
                        }
                        //highlight changed values
                        if (response.changeddata != '') {
                            $.each(response.changeddata, function (i, v) {
                                $('#render-form').find('#' + v.fieldName).addClass("text-danger");
                            });
                        }
                        $('#render-form :button').hide();
                        DisplayForm();
                        $(".msgHeader").attr('style', 'display:normal');
                        $(".chatDiv").attr('style', 'display:normal');

                        if (callback && typeof(callback) === "function") {
                            callback();
                        }

                    },
                    error: function (err) {
                        alert(err);
                        $('#render-form').html('<h2>ERROR: ' + err + '</h2>');
                        DisplayForm();
                        $(".msgHeader").attr('style', 'display:normal');
                        $(".chatDiv").attr('style', 'display:normal');
                    }
                });
            } catch (e) {
                alert(e);
                DisplayForm();
            }
        };

        $(".process").on('click', function (e) {

            //e.preventDefault();
            //e.stopPropagation();
            var url = window.location.pathname;
            var id = url.substring(url.lastIndexOf('/') + 1);

            var formData = new FormData();
            var file = $("#file")[0].files;
            var remark = $('#remark').val();
            var status = $(this).data('datac');
            var dataType = "TARIFF_REQUEST_NOTIFICATION";

            formData.append("dataType", dataType);
            formData.append("file", file[0]);
            formData.append("remarks", remark);
            formData.append("status", status);
            formData.append("entryId", id);

            if ($.trim(remark) == "") {
                $("#remError").html("<p style='color:red;'>This field is Required</p>")
            }
            else if ($("#file").val() == "") {
                $("#remFileError").html("<p  style='color:red;'>This field is Required</p>")
            } else {
                var i = $(this).find('i');
                i.attr('class', 'fa fa-gear fa-spin');
                $.ajax({
                    url: "/Forms/PostRemark",
                    type: "POST",
                    data: formData,
                    processData: false,
                    contentType: false,
                    cache: false,

                }).done(function () {
                    alert("Remark submitted successfully!");
                }).fail(function () {
                    alert("There was and unexpected error while processing your request!");
                });
            }
        });

        $(".eval").on('click', function (e) {

            var url = window.location.pathname;
            var id = url.substring(url.lastIndexOf('/') + 1);

            var formData = new FormData();
            var file = $("#evalFile")[0].files;
            var remark = $('#evalRemark').val();

            formData.append("file", file[0]);
            formData.append("evaluationRemarks", remark);
            formData.append("entryId", id);

            if ($.trim(remark) == "") {
                $("#evalError").html("<p style='color:red'>This field is Required</p>")
                $("#evalError").addClass("error");
            } else if ($("#evalFile").val() == "") {
                $("#evalFileError").html("<p  style='color:red;'>This field is Required</p>")
                $("#evalFileError").addClass("error");
            }
            else {
                var i = $(this).find('i');
                i.attr('class', 'fa fa-gear fa-spin');
                $.ajax({
                    url: "/Forms/PostRemark",
                    type: "POST",
                    data: formData,
                    processData: false,
                    contentType: false,
                    cache: false,

                }).done(function () {
                    alert("Evaluation submitted successfully!");
                    i.attr('class', 'fa fa-save');
                }).fail(function () {
                    alert("There was and unexpected error while processing your request!");
                    i.attr('class', 'fa fa-save');
                });
            }
        });

        function download() {
            try {
                const element = document.getElementById("render-form2");

                html2canvas(element, {
                    scale: 2, // Adjust scale for better resolution
                    allowTaint: true
                }).then(function (canvas) {

                    // Convert the canvas to an image data URL
                    const imageData = canvas.toDataURL('image/png');

                    // Set up the PDF document
                    const doc = new jspdf.jsPDF();
                    const width = doc.internal.pageSize.getWidth();
                    const height = doc.internal.pageSize.getHeight();

                    // Add the image to the PDF
                    doc.addImage(imageData, 'PNG', 0, 0, width, height);

                    doc.setFontSize(14); // Set font size
                    doc.setFont('times', 'normal');


                    // Save the PDF
                    var filename = $('.filename').val();
                    doc.save(filename);

                    $(".messg").attr('style', 'display:normal');

                });
            } catch (ex) {
                $(".error").attr('style', 'display:normal');
            }


            // Capture the HTML content with the ID of the HTML element
            // const element = document.getElementByClassName('card-body);
            // html2canvas(element).then(function (canvas) {

            //     // Convert the canvas to an image data URL
            //     const imageData = canvas.toDataURL('image/jpeg');

            //     // Set up the PDF document
            //     const doc = new jspdf.jsPDF();
            //     const width = doc.internal.pageSize.getWidth();
            //     const height = doc.internal.pageSize.getHeight();

            //     // Add the image to the PDF
            //     doc.addImage(imageData, 'JPEG', 0, 0, width, height);

            //     // Save the PDF
            //     var filename = $('.filename').val();
            //     doc.save(filename);
            // });
        }

        $(document).ready(function () {
            $(".chatDiv").attr("style", "display:none");
            details(download);

        });

    </script>
}