@{
    ViewData["Title"] = ViewBag.title + "(" + ViewBag.OperatorId + ")";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    string link = ViewBag.link;
}

@section Css{
    <link rel="stylesheet" href="~/dist/formeo.min.css" type="text/css" />
    <link rel="stylesheet" href="~/assets/summernote/summernote-bs4.css" type="text/css" />

    <style>
        #render-form {
            pointer-events: none;
        }

        .formeo-column a {
            pointer-events: visible;
        }

        .card {
            margin-bottom: 2px !important;
        }

        .btn-link {
            text-decoration: none !important;
            font-weight: bold;
        }

        .error {
            color: red;
        }

    </style>
}

@if (ViewBag.error != null || TempData["error"] != null)
{
    string err = ViewBag.error != null ? ViewBag.error : TempData["error"];
    <div class="small text-center bg-danger text-white w-75 m-auto p-2 mb-1">@err</div>
}
@if (ViewBag.message != null || TempData["message"] != null)
{
    string msg = ViewBag.message != null ? ViewBag.message : TempData["message"];
    <div class="small text-center bg-success text-white w-75 m-auto p-2 mb-1">@msg</div>
}

<input hidden="hidden" id="entryId" value="@ViewData["EntryId"]" />
<a href="@link" class="text-danger"><i class="fa fa-angle-double-left"></i> Go Back</a>
<p class="text-badge-dark text-bold mt-2 text-center">You can view/print operator's submission and also send/view messages</p>
<div id="accordion">
    <div class="card">
        <div class="card-header" style=" background-color:#E9ECEF" id="headingThree">
            <h5 class="mb-0">
                @if (ViewBag.MasterEntryId == null)
                {
                    <button class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                        Tariff Submissions
                    </button>
                }
                else
                {
                    <button class="btn btn-link collapsed pull-left" data-toggle="collapse" data-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                        Click here to preview submitted Tariff
                    </button>
                    <a href="~/Forms/ViewTariff/@ViewBag.MasterEntryId" class="text-danger text-small pull-right" target="_blank"> Click here to see @ViewBag.MasterEntryName</a>
                }

                <button id="btnPrint" type="button" data-toggle="modal" data-target="dvPrint" class="text-secondary btn btn-link close pull-right mr-3" title="Print this form"><i class="fa fa-2x fa-print"></i></button>
            </h5>
        </div>

        <div id="collapseThree" class="collapse show" aria-labelledby="headingThree" data-parent="#accordion">
            <div class="card-body">
                <div id="form-loader" class="form-loader">
                    <div class="text-center"><img src="~/img/loading.gif" /></div>
                </div>
                <div id="render-form" class="modal-body">
                </div>
            </div>

        </div>
    </div>
</div>

<br />

@*Messages*@
<div id="accordion">
    <div class="card">
        <div class="card-header" style="background-color:#E9ECEF;" id="headingMsg">
            <h5 class="mb-0">
                <button class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapseMsg" aria-expanded="false" aria-controls="collapseMsg">
                    Messages
                </button>
            </h5>
        </div>

        <div id="collapseMsg" class="collapse show" aria-labelledby="headingMsg" data-parent="#accordion">
            <div class="card-body" style="background-color:mintcream;">
                <div id="loader" style="display:none">
                    <input hidden="hidden" value="@ViewData["OppUserId"]" id="oppUserId" />
                    <input hidden="hidden" value="@ViewBag.title" id="title" />
                    <div class="text-center"><img src="~/img/loading.gif" /></div>
                </div>

                <div id="divMessages">
                </div>
            </div>
        </div>
    </div>
</div>

<br />


@*Task Trail*@
<div id="accordion">
    <div class="card">
        <div class="card-header" style="background-color:#E9ECEF;" id="headingTaskT">
            <h5 class="mb-0">
                <button class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapseTaskT" aria-expanded="false" aria-controls="collapseTaskT">
                    Task Trail
                </button>
            </h5>
        </div>

        <div id="collapseTaskT" class="collapse show" aria-labelledby="headingTaskT" data-parent="#accordion">
            <div class="card-body" style="background-color:mintcream;">
                <div id="loaderT" style="display:none">
                    <div class="text-center"><img src="~/img/loading.gif" /></div>

                </div>

                <div id="taskManagerTrail" class="task-trail">
                </div>
            </div>
        </div>
    </div>
</div>



@section Scripts{

    <script src="~/dist/formeo.min.js" type="text/javascript"></script>
    <script src="~/assets/summernote/summernote-bs4.min.js" type="text/javascript"></script>

    <script type="text/javascript">

        $(function () {
            $('.summernote').summernote({
                height: 500
            });
        });


        $('#btnPrint').click(function () {
            try {
                $('#render-form').printThis({
                    importCSS: true,
                })
            }
            catch (e) {
                alert(e);
            }
        })

        function DisplayForm() {
            try {
                $('.form-loader').removeAttr('style');
                $('.modal-body').removeAttr('style');

                $('.form-loader').attr('style', 'display:none');
                $('.modal-body').attr('style', 'display:normal');
            } catch (e) {
            }
        }

        Array.prototype.contains = function (elem) {
            for (i in this) {
                if ($(this[i]).prop('tagName') == elem) return true;
            }
            return false;
        }
        function DisplayFormLoader() {
            try {
                $('.form-loader').removeAttr('style');
                $('.modal-body').removeAttr('style');

                $('.form-loader').attr('style', 'display:normal');
                $('.modal-body').attr('style', 'display:none');
            } catch (e) {
            }
        }

        function details() {
            try {
                var url = window.location.pathname;
                var id = url.substring(url.lastIndexOf('/') + 1);
                DisplayFormLoader();
                $.ajax({
                    url: "/Forms/TDetails",
                    type: "POST",
                    data: { "entry": id },
                    dataType: 'json',
                    //contentType: 'application/json; charset=UTF-8',
                    success: function (response) {
                        if (response.template != '') {
                            $(".loader").attr('style', 'none');
                            $('#render-form').append(response.template);
                            //console.log(response.template);
                        } else {
                            var rendr = new FormeoRenderer({ renderContainer: '#render-form' });
                            rendr.render(JSON.parse(cnt));
                        }

                        //fill form
                        if (response.data != '') {
                            $.each(response.data, function (i, v) {
                                var input = $('#render-form').find('#' + v.fieldName);
                                if (input.attr('type') != 'file') {
                                    input.val(v.response);
                                }
                                else if (!input.siblings().toArray().includes('A') && v.response != "") {
                                    input.before('<a href="../../uploads/' + v.response + '" ' + v.response + ' class="text-primary d-table-cell" target="blank">Uploaded file Name is <b>' + v.response + '</b></a>');
                                }
                            });
                        }
                        //highlight changed values
                        if (response.changeddata != '') {
                            $.each(response.changeddata, function (i, v) {
                                $('#render-form').find('#' + v.fieldName).addClass("text-danger");
                            });
                        }
                        $('#render-form :button').hide();
                        DisplayForm();
                    },
                    error: function (err) {
                        alert(err);
                        $('#render-form').html('<h2>ERROR: ' + err + '</h2>');
                        DisplayForm();
                    }
                });
            } catch (e) {
                alert(e);
                DisplayForm();
            }
        };

        function loadMsg() {
            try {
                debugger;
                $("#loader").attr('style', 'display:normal');

                var oppuserId = $("#oppUserId").val();
                var productName = $("#title").val();
                var id = $("#entryId").val();

                $.ajax({
                    url: "/Forms/LoadMessages",
                    type: 'GET',
                    data: { "entryId": id, "oppUserId": oppuserId, "productName": productName },
                    dataType: 'json',
                    complete: function (response) {
                        console.log(response);
                        if (response === '') {
                            alert("Could not load messages. Please try again.")
                        }
                        else {
                            $("#loader").attr('style', 'display:none');
                            $("#divMessages").html(response.responseText);
                        }
                    }
                });
            }
            catch (e) {
                alert(e);
            }
        };

        function loadTaskTrail() {
            $("#loaderT").attr('style', 'display:normal');

            //get task trail
            PostBackURL = '/Workflows/GetTaskTrailByUrl';
            var sCurrentUrl = window.location.href;
            var sPathname = window.location.pathname;
            console.log(sPathname.includes("Tariff"));
            var check = sPathname.substring(sPathname.indexOf("/")).substring(sCurrentUrl.indexOf("/") + 1);
            check = check.substring(0, check.indexOf("/"));
            if (check.includes("Tariff")) {
                check = "ViewTariff";
                sCurrentUrl = window.location.origin + "/Forms/" + check + sCurrentUrl.substring(sCurrentUrl.lastIndexOf("/"))
            }
            if (check == "Details") {
                check = "SurveyDetails";
                sCurrentUrl = window.location.origin + "/Forms/" + check + sCurrentUrl.substring(sCurrentUrl.lastIndexOf("/"))
            }

            $.ajax({
                type: "GET",
                url: PostBackURL,
                contentType: "application/json; charset=utf-8",
                data: { "ActionUrl": sCurrentUrl },
                datatype: "json",
                success: function (data) {
                    $('#taskManagerTrail').html(data);
                    $("#loaderT").attr('style', 'display:none');
                },
                error: function () {
                    $("#loaderT").attr('style', 'display:none');
                    alert("Could not load task trail.Try again later.")

                }
            });

        }

        $(".process").on('click', function (e) {

            //e.preventDefault();
            //e.stopPropagation();
            var url = window.location.pathname;
            var id = url.substring(url.lastIndexOf('/') + 1);

            var formData = new FormData();
            var file = $("#file")[0].files;
            var remark = $('#remark').val();
            var status = $(this).data('datac');
            var dataType = "TARIFF_REQUEST_NOTIFICATION";

            formData.append("dataType", dataType);
            formData.append("file", file[0]);
            formData.append("remarks", remark);
            formData.append("status", status);
            formData.append("entryId", id);

            if ($.trim(remark) == "") {
                $("#remError").html("<p style='color:red;'>This field is Required</p>")
            }
            else if ($("#file").val() == "") {
                $("#remFileError").html("<p  style='color:red;'>This field is Required</p>")
            } else {
                var i = $(this).find('i');
                i.attr('class', 'fa fa-gear fa-spin');
                $.ajax({
                    url: "/Forms/PostRemark",
                    type: "POST",
                    data: formData,
                    processData: false,
                    contentType: false,
                    cache: false,

                }).done(function () {
                    alert("Remark submitted successfully!");
                }).fail(function () {
                    alert("There was and unexpected error while processing your request!");
                });
            }
        });

        $(".eval").on('click', function (e) {

            var url = window.location.pathname;
            var id = url.substring(url.lastIndexOf('/') + 1);

            var formData = new FormData();
            var file = $("#evalFile")[0].files;
            var remark = $('#evalRemark').val();

            formData.append("file", file[0]);
            formData.append("evaluationRemarks", remark);
            formData.append("entryId", id);

            if ($.trim(remark) == "") {
                $("#evalError").html("<p style='color:red'>This field is Required</p>")
                $("#evalError").addClass("error");
            } else if ($("#evalFile").val() == "") {
                $("#evalFileError").html("<p  style='color:red;'>This field is Required</p>")
                $("#evalFileError").addClass("error");
            }
            else {
                var i = $(this).find('i');
                i.attr('class', 'fa fa-gear fa-spin');
                $.ajax({
                    url: "/Forms/PostRemark",
                    type: "POST",
                    data: formData,
                    processData: false,
                    contentType: false,
                    cache: false,

                }).done(function () {
                    alert("Evaluation submitted successfully!");
                    i.attr('class', 'fa fa-save');
                }).fail(function () {
                    alert("There was and unexpected error while processing your request!");
                    i.attr('class', 'fa fa-save');
                });
            }
        });


        $(document).ready(function () {
            details();
            loadMsg();
            loadTaskTrail();
        });

    </script>

}