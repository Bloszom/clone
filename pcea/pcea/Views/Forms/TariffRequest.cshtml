@{
    ViewData["Title"] = ViewBag.title != null ? ViewBag.title : "List of Survey Responses";
    string formType = ViewContext.RouteData.Values["Action"].ToString().ToLower();

    if (ViewBag.error != null || TempData["error"] != null)
    {
        string err = ViewBag.error != null ? ViewBag.error : TempData["error"];
        <div class="text-small text-center text-danger">@err</div>
    }
    if (ViewBag.message != null || TempData["message"] != null)
    {
        string msg = ViewBag.message != null ? ViewBag.message : TempData["message"];
        <div class="small text-center bg-success text-white w-75 m-auto p-2 mb-3">@msg</div>
    }
    // if (ViewBag.error != null)
    // {
    //     <div class="text-small text-center text-danger">@ViewBag.error</div>
    // }
    // if (ViewBag.message != null)
    // {
    //     <div class="text-small text-center text-success">@ViewBag.message</div>
    // }
    var flds = ViewBag.fields != null ? ViewBag.fields.Count : 0;
    string survTxt = formType == "details" ? "Select Survey/Questionnaire" : (formType == "tariffrequest" ? "Select Tariff Status" : "Select Requests");

    bool? final = (bool?)ViewBag.final;
    bool? eval = (bool?)ViewBag.eval;
    bool? letter = (bool?)ViewBag.letter;
}

@section Css{
    <link rel="stylesheet" href="~/dist/formeo.min.css" type="text/css" />
    <style>
        #render-form {
            pointer-events: none;
        }

        #frmProcess {
            display: none;
        }
    </style>
        }

<div class="row mt-2">
    <div class="col-md-12 col-sm-12">
        <div class="form-inline mb-2">
            <i class="fa fa-file fa-2x text-gray"></i> &nbsp; &nbsp;
            @Html.DropDownList("Survey", (SelectList)ViewBag.SurveyList, @survTxt, new { @class = "form-control" })
            &nbsp; &nbsp;
            <i class="fa fa-search text-gray"></i> &nbsp;
            @if (formType == "details")
            {
                @*@Html.DropDownList("operator_type", (SelectList)ViewBag.OperType, "-Select Operator Type", new { @class = "form-control" })*@
                <select class="form-control ftypes" id="form_type">
                    <option value="All">All Types of Forms</option>
                    <option value="MONTHLY">MONTHLY</option>
                    <option value="QUARTERLY">QUARTERLY</option>
                    <option value="YEARLY">YEARLY</option>
                </select>
            }
            else
            {
                @*@Html.DropDownList("Tariff Type", (SelectList)ViewBag.TariffType, "Tariff Type", new { @class = "form-control" })*@
            }
            @Html.TextBox("OperatorName", null, new { @placeholder = "Search by Operator", @class = "form-control" })
            <select class="form-control ftypes" id="form_typeM">
                <option value="" disabled="disabled" selected="selected">-Day-</option>
                <option value="1">1</option>
                <option value="2">2</option>
                <option value="3">3</option>
                <option value="4">4</option>
                <option value="5">5</option>
                <option value="6">6</option>
                <option value="7">7</option>
                <option value="8">8</option>
                <option value="9">9</option>
                <option value="10">10</option>
                <option value="11">11</option>
                <option value="12">12</option>
                <option value="13">13</option>
                <option value="14">14</option>
                <option value="15">15</option>
                <option value="16">16</option>
                <option value="17">17</option>
                <option value="18">18</option>
                <option value="19">19</option>
                <option value="20">20</option>
                <option value="21">21</option>
                <option value="22">22</option>
                <option value="23">23</option>
                <option value="24">24</option>
                <option value="25">25</option>
                <option value="26">26</option>
                <option value="27">27</option>
                <option value="28">28</option>
                <option value="29">29</option>
                <option value="30">30</option>
                <option value="31">31</option>
            </select>
            <select class="form-control ftypes" id="form_typeM">
                <option value="" disabled="disabled" selected="selected">-Month-</option>
                <option value="1">January</option>
                <option value="2">February</option>
                <option value="3">March</option>
                <option value="4">April</option>
                <option value="5">May</option>
                <option value="6">June</option>
                <option value="7">July</option>
                <option value="8">August</option>
                <option value="9">September</option>
                <option value="10">October</option>
                <option value="11">November</option>
                <option value="12">December</option>
            </select>
            <select class="form-control ftypes" id="form_type">
                <option value="" disabled="disabled" selected="selected">-Year-</option>
                <option value="">2020</option>
            </select>
        </div>
    </div>
</div>

<div class="table-responsive">
    <table class="table table-striped table-hover small" style="height:900px" id="indexDataTableBasic">
        <thead>
            <tr>
                <th>#</th>
                <th>Product Name</th>
                <th>Operator</th>
                <th>Tariff</th>
                <th>DateSubmitted</th>
                <th>Type</th>
                <th>Tariff Status</th>
                <th>Remarks</th>
                <th class="text-right">Action</th>
                @*<th class="text-right">Actions</th>*@
            </tr>
        </thead>
        <tbody>
            @if (ViewBag.entrys != null)
            {
                var i = 0;
                foreach (FormsAndEntry Record in ViewBag.entrys)
                {
                    i++;
                    <tr class="itm _@Record.EntryId _@Record.FormType _@Record.FormYear">
                        <td>@i</td>
                        <td>@Record.ProductName</td>
                        <td>@Record.OrganizationName</td>
                        <td>@Record.FormsTypeCategory</td>
                        <td>@Record.DateSubmitted</td>
                        <td>@Record.AppType</td>
                        <td>@Record.ReviewStatus</td>
                        <td>@Record.ReviewRemarks</td>
                        @*<td class="text-right" style="width:20%; display:none;">
                            <button id="@Record["EntryId"].ToString()" class="btn btn-primary btn-sm small viewSurvey" type="button" value="@Record["FormFields"].ToString()" data-toggle="modal" data-target="#surveyEntry"><i class="fa fa-edit"></i> View</button>
                            <a href="~/Forms/ViewTariff/@Record.EntryId/1" id="@Record.EntryId" status="@Record.Status.ToLower()" class="btn btn-primary btn-sm small "><i class="fa fa-edit"></i> View</a>
                            <a href="~/Report/TariffExport/@Record.EntryId" id="@Record.EntryId" class="btn btn-outline-primary btn-sm small"><i class="fa fa-cloud-download"></i> Export</a>
                        </td>*@
                        <td class="text-nowrap text-small">
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <button data-toggle="dropdown" type="button" class="btn btn-sm btn-outline-primary dropdown-toggle">
                                        Action <span class="caret"></span>
                                    </button>
                                    <div class="dropdown-menu">
                                        <a href="~/Forms/ViewTariff/@Record.EntryId" id="@Record.EntryId" status="@Record.Status.ToLower()" class="dropdown-item "><i class="fa fa-edit"></i> View Tariff</a>
                                        @*<div class="dropdown-divider"></div>
                                <a href="~/Report/TariffExport/@Record.EntryId" id="@Record.EntryId" class="dropdown-item"><i class="fa fa-cloud-download"></i> Export Tariff</a>*@
                                        <div class="dropdown-divider"></div>

                                        @if (final.HasValue && letter.HasValue && eval.HasValue)
                                        {
                                            @if (eval.Value)
                                            {
                                                <a href="~/Forms/EvaluateTariff/@Record.EntryId" id="@Record.EntryId" class="dropdown-item"><i class="fa fa-download"></i> Upload Evaluation Report</a>
                                            }
                                            @if (letter.Value)
                                            {
                                                <a href="~/Forms/LetterUpload/@Record.EntryId" id="@Record.EntryId" class="dropdown-item"><i class="fa fa-download"></i> Upload Rejection/Approval Letter</a>
                                            }
                                            @if (final.Value)
                                            {
                                                <a href="~/Forms/ApproveTariff/@Record.EntryId" id="@Record.EntryId" class="dropdown-item"><i class="fa fa-check"></i> Approve/Reject Tariff</a>
                                            }
                                            <div class="dropdown-divider"></div>

                                            @if (Record.MemoContent == null)
                                            {
                                                <button class="dropdown-item memoGenerate btn btn-link" type="button" entryId="@Record.EntryId" processId="@Record.ProcessId" actionType="modalDetails" productName="@Record.ProductName" orgName="@Record.OrganizationName"><i class="fa fa-file-text-o"></i> Generate Memo</button>
                                            }
                                            else
                                            {
                                                <a asp-action="EditMemo" asp-controller="Forms" asp-route-id="@Record.EntryId" asp-route-processId="@Record.ProcessId" asp-route-productName="@Record.ProductName" asp-route-orgName="@Record.OrganizationName" id="@Record.EntryId" class="dropdown-item"><i class="fa fa-edit"></i> Edit Memo</a>
                                                <a asp-action="PrintMemo" asp-controller="Forms" asp-route-id="@Record.EntryId" asp-route-url="@ViewBag.Url" id="@Record.EntryId" class="dropdown-item"><i class="fa fa-print"></i> Print Memo</a>
                                                <a asp-action="PrintMemo" asp-controller="Forms" asp-route-id="@Record.EntryId" asp-route-url="@ViewBag.Url" asp-route-actionType="downloadMemo" id="@Record.EntryId" class="dropdown-item"><i class="fa fa-save"></i> Download Memo</a>
                                            }
                                        }
                                        else
                                        {
                                            <a href="~/Forms/EvaluateTariff/@Record.EntryId" id="@Record.EntryId" class="dropdown-item"><i class="fa fa-download"></i> Upload Evaluation Report</a>

                                            <a href="~/Forms/LetterUpload/@Record.EntryId" id="@Record.EntryId" class="dropdown-item"><i class="fa fa-download"></i> Upload Rejection/Approval Letter</a>

                                            <a href="~/Forms/ApproveTariff/@Record.EntryId" id="@Record.EntryId" class="dropdown-item"><i class="fa fa-check"></i> Approve/Reject Tariff</a>
                                            <div class="dropdown-divider"></div>

                                            @if (Record.MemoContent == null)
                                            {
                                                <button class="dropdown-item memoGenerate btn btn-link" type="button" entryId="@Record.EntryId" processId="@Record.ProcessId" actionType="modalDetails" productName="@Record.ProductName" orgName="@Record.OrganizationName"><i class="fa fa-file-text-o"></i> Generate Memo</button>
                                            }
                                            else
                                            {
                                                <a asp-action="EditMemo" asp-controller="Forms" asp-route-id="@Record.EntryId" asp-route-processId="@Record.ProcessId" asp-route-productName="@Record.ProductName" asp-route-orgName="@Record.OrganizationName" id="@Record.EntryId" class="dropdown-item"><i class="fa fa-edit"></i> Edit Memo</a>
                                                <a asp-action="PrintMemo" asp-controller="Forms" asp-route-id="@Record.EntryId" asp-route-url="@ViewBag.Url" id="@Record.EntryId" class="dropdown-item"><i class="fa fa-print"></i> Print Memo</a>
                                                <a asp-action="PrintMemo" asp-controller="Forms" asp-route-id="@Record.EntryId" asp-route-url="@ViewBag.Url" id="@Record.EntryId" asp-route-url="@ViewBag.Url" asp-route-actionType="downloadMemo" class="dropdown-item"><i class="fa fa-save"></i> Download Memo</a>

                                            }
                                        }
                                    </div>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
                if (i == 0)
                {
                    <tr>
                        <td colspan="9">
                            <h4 class="font-weight-light text-center small">No entry has been submitted</h4>
                        </td>
                    </tr>
                }
            }
            else
            {
                //var cp = flds + 1;
                <tr>
                    <td colspan="9">
                        <h4 class="font-weight-light text-center">No Entry</h4>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="modal fade" id="surveyEntry" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                @*<h4 class="modal-title">Title</h4>*@
                <i class="text-danger text-center">Modified or new entries are highlighted in red for Tariff Upgrade</i>
                <button class="close" type="button" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
            </div>
            <div id="render-form" class="modal-body">
                <div class="text-center loader" style="display:none"><img src="~/img/loading.gif" /></div>
            </div>
            @*<div class="modal-footer">
            <form id="frmProcess" method="post" asp-action="ProcessTariffRejectOrAccept">
            @Html.AntiForgeryToken()
            <input type="hidden" id="Status" name="Status" value="" />
            <input type="hidden" id="Entry" name="Entry" value="" />
            <button class="btn btn-primary btn-sm process" data-status="CONFIRMED" type="button"><i class="fa fa-check"></i> Accept</button>
            <button class="btn btn-danger btn-sm process" data-status="REJECTED" type="button"><i class="fa fa-ban"></i> Reject</button>
            </form>
            <button class="btn btn-secondary btn-sm" type="button" data-dismiss="modal"><i class="fa fa-times"></i> Close</button>
            </div>*@
            <div style="margin: 0px 15px 0px 15px ">
                <hr />
                <form id="frmProcess" enctype="multipart/form-data" method="post">
                    <h4 align="center">Official Use Only</h4>
                    <div class="form-group">
                        <small>Remarks/Comment</small>
                        <textarea class="form-control" id="remark" name="remark" data-rule-validRemark="true" required></textarea>
                        <div id="remError"></div>
                    </div>
                    <div class="form-group">
                        <small>Upload approval or response letter, if applicable.</small>
                        <input type="file" class="form-control" id="file" name="file" />
                    </div>
                    <div class="pull-right">
                        <input type="hidden" id="Status" name="Status" value="" />
                        <input type="hidden" id="Entry" name="Entry" value="" />
                        <button class="btn btn-primary btn-sm process" data-datac="APPROVED" type="submit"><i class="fa fa-check"></i> Accept</button>
                        <button class="btn btn-danger btn-sm process pull-left " data-datac="REJECTED" type="submit"><i class="fa fa-ban"></i> Reject</button>
                        <button class="btn btn-secondary btn-sm" type="button" data-dismiss="modal"><i class="fa fa-times"></i> Close</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


@*Generate Memo Modal*@
<div class="modal fade" id="generateMemo" tabindex="-1" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title text-secondary">Select Memo Template</h4>
                <button class="close" type="button" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
            </div>
            <div class="modal-body">
                <div class="text-center loader" style="display:none"><img src="~/img/loading.gif" /></div>
                <div id="memoList" style="display:none"></div>
            </div>


        </div>
    </div>
</div>





@section Scripts{

    <script src="~/dist/formeo.min.js" type="text/javascript"></script>

    <script type="text/javascript">

        $('.memoGenerate').click(function () {
            //alert("working");
            debugger;
            var PostBackUrl = '/Forms/GenerateMemo'
            var formData = new FormData();

            formData.append("EntryId", $(this).attr("entryId"));
            formData.append("ProcessId", $(this).attr("processId"));
            formData.append("ActionType", $(this).attr("actionType"));
            formData.append("ProductName", $(this).attr("productName"));
            formData.append("OrganizationName", $(this).attr("orgName"));

            //var id = $(this).attr("entryId");
            //var processId = $(this).attr("processId");
            //var actionType = $(this).attr("actionType");
            //var productName = $(this).attr("productName");
            //var orgName = $(this).attr("orgName");
            $('#generateMemo').modal('show');
            $('.loader').attr('style', 'display:normal');

            $.ajax({
                url: PostBackUrl,
                type: "POST",
                data: formData,
                processData: false,
                contentType: false,
                cache: false,
                success: function (data) {
                    $('#memoList').html(data);
                    $('.loader').attr('style', 'display:none');
                    $('#memoList').attr('style', 'display:normal');
                },
                error: function () {
                    alert("Unable to retrieve field values.  Please, try again.");
                    $('#generateMemo').modal('hide');
                }
            });
        });

        //$('.memoEdit').click(function(){
        //    debugger;
        //        //alert("working");
        //         var PostBackUrl = '/Forms/PreloadMemo'
        //         var formData = new FormData();
        //         var action = "editMemo";
        //          formData.append("EntryId", $(this).attr("entryId"));
        //          formData.append("ProcessId", $(this).attr("processId"));
        //          formData.append("MemoAction", $(this).attr("actionType"));
        //          formData.append("ProductName", $(this).attr("productName"));
        //          formData.append("OrganizationName", $(this).attr("orgName"));

        //         $.ajax({
        //             url: PostBackUrl,
        //             type: "POST",
        //             data:formData,
        //             processData: false,
        //             contentType: false,
        //             //cache: false,
        //             success: function (response) {
        //                 //debugger;
        //                 //console.log(response);
        //                 //window.location.href = response.Url;
        //                  //$("#tariff").attr('style', 'display:none');
        //                  //$("#divContent").html(response.responseText);
        //             },
        //             error: function(){
        //                 alert("Unable to retrieve memo values.  Please, try again.");
        //             }
        //         });
        // });

        jQuery(function ($) {

            function getUrlVars() {
                var vars = [], hash;
                var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
                for (var i = 0; i < hashes.length; i++) {
                    hash = hashes[i].split('=');
                    vars.push(hash[0]);
                    vars[hash[0]] = hash[1];
                }
                return vars;
            }

            var status = getUrlVars()["status"];

            if (status != null) {
                $('#Survey').val(status);
            }


            var processForm = $('#frmProcess');
            var cur = '@ViewContext.RouteData.Values["id"]';
            $('#Survey').val();
            $('#Survey').change(function () {
                $(this).parent().find('.fa').removeClass('fa-file').addClass('fa-gear fa-spin');
                window.location.href = "/@ViewContext.RouteData.Values["Controller"]/@ViewContext.RouteData.Values["Action"]/?status=" + $(this).val();
            });

            //$('.process').click(function () {
            //    var resp = $(this).attr('data-status');
            //    processForm.find('#Status').val(resp);
            //    if (resp.toUpperCase() == 'REJECTED') processForm.append('<input type="hidden" name="REJECTED" value="' + prompt("Please State reasons for rejecting", "Reason...") + '" />');
            //    processForm.submit();
            //});
            $(".process").on('click', function (e) {

                //e.preventDefault();
                //e.stopPropagation();

                var formData = new FormData();
                var file = $("#file")[0].files;
                var remark = $('#remark').val();
                var status = $(this).data('datac');
                var id = $("#Entry").val();
                var dataType = "TARIFF_REQUEST_NOTIFICATION";

                formData.append("dataType", dataType);
                formData.append("file", file[0]);
                formData.append("remarks", remark);
                formData.append("status", status);
                formData.append("entryId", id);

                if ($.trim(remark) == "") {
                    $("#remError").html("<p>The Remark field is Required</p>")
                    $("#remError").addClass("error");
                } else if (status == "APPROVED") {
                    openTaskManager();
                    $("#Status").val(status);
                }
                else {
                    $.ajax({
                        url: "/Forms/PostRemark",
                        type: "POST",
                        data: formData,
                        processData: false,
                        contentType: false,
                        cache: false,

                    }).done(function () {
                        alert("Remark submitted successfully!");
                    }).fail(function () {
                        alert("There was and unexpected error while processing your request!");
                    });
                }
            });

            $('.viewSurvey').click(function () {
                try {
                    $(".loader").attr('style', 'normal');
                    var cnt = $(this).attr('data-content'), entr = $(this).attr('id');
                    console.log(cnt);
                    processForm.find('#Entry').val(entr);
                    if ($(this).attr('data-status') == 'confirmed' || $(this).attr('data-status') == 'rejected') {
                        processForm.hide();
                    } else {
                        processForm.show();
                    }
                    $.ajax({
                        url: "/Forms/TDetails",
                        type: "POST",
                        data: { "entry": entr },
                        dataType: 'json',
                        //contentType: 'application/json; charset=UTF-8',
                        success: function (response) {
                            if (response.template != '') {
                                $(".loader").attr('style', 'none');
                                $('#render-form').html(response.template);
                                //console.log(response.template);
                            } else {
                                var rendr = new FormeoRenderer({ renderContainer: '#render-form' });
                                rendr.render(JSON.parse(cnt));
                            }

                            //fill form
                            if (response.data != '') {
                                $.each(response.data, function (i, v) {
                                    $('#render-form').find('#' + v.fieldName).val(v.response);
                                });
                            }

                            //highlight changed values
                            if (response.changeddata != '') {
                                $.each(response.changeddata, function (i, v) {
                                    $('#render-form').find('#' + v.fieldName).addClass("text-danger");
                                });
                            }
                            $('#render-form :button').hide();
                        },
                        error: function (err) {
                            alert(err);
                            $('#render-form').html('<h2>ERROR: ' + err + '</h2>');
                        }
                    });
                } catch (e) {
                    alert(e);
                }
            });

            $('#OperatorName').keyup(function (e) {
                if ($('#OperatorName').val() == '') {
                    $('.itm').show('slow');
                } else {
                    $('.itm').hide();
                    $('.itm').each(function () {
                        if ($(this).find('td').eq(2).text().toLowerCase().indexOf($('#OperatorName').val().toLowerCase()) > -1) $(this).show(); else $(this).hide();
                    });
                }
            });

            $('.ftypes').change(function () {
                if ($(this).val() == 'All') {
                    $('.itm').show('slow');
                } else {
                    $('.itm').hide();
                    var cls = "_" + $(this).val().toLowerCase();
                    $('.' + cls).show('slow');
                }
            });
        });

    </script>
}
