
@model IEnumerable<Reports>

@{
    List<ReportsCategory> catgL = ViewBag.categoryList;
    ViewData["Title"] = "List of Reports";
    Layout = "~/Views/Shared/_LayoutOperator.cshtml";
}

@if (TempData["message"] != null || ViewBag.message != null)
{
    string msg = ViewBag.message != null ? ViewBag.message : TempData["message"];
    <div class="p-2 w-75 m-auto small text-center mb-2 bg-success text-white">@msg</div>
}
@if (TempData["error"] != null || ViewBag.error != null)
{
    string err = ViewBag.error != null ? ViewBag.error : TempData["error"];
    <div class="p-2 w-75 m-auto small text-center mb-2 bg-danger text-white">@err</div>
}

@if (ViewBag.report != null)
{
    dynamic rpt = ViewBag.report;
    <a href="~/Survey/Export" class="btn btn-sm btn-light"><i class="fa fa-angle-double-left"></i> Report List</a>
    <small class="font-weight-bold pull-right">
        <i class="fa fa-calendar"></i> Last Gen: <label>@rpt["mDate"]</label>
    </small>
    <div class="bg-white p-2">
        <div class="small">
            <figure class="highcharts-figure">

                <div class="form-group">
                    <div class="bg-white" id="rptChart">
                    </div>
                </div>

                <div class="form-group">
                    <i class="fa fa-table"></i> Data:
                    <table class="table table-hover table-bordered" id="rptTable">
                        @Html.Raw(rpt["table"])
                    </table>
                </div>

            </figure>
        </div>
    </div>
    <hr />
}
else
{
    <div class="table-responsive bg-white">
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th width="30%">
                        Title
                        @*<div style="margin-left:-5px; margin-bottom:-8px;">
                            <input id="hTitle" class="form-control-sm border-0" style="width:100%;" placeholder="c" />
                        </div>*@
                    </th>
                    <th width="30%">
                        Category
                        @*<div style="margin-left:-4px; margin-bottom:-8px;">
                            @Html.DropDownList("Category", new SelectList(ViewBag.categoryList, "RecId", "Title"), "Select to filter by category", new { @class = "form-control-sm border-0 pl-0 ftypes" })
                        </div>*@
                    </th>
                    <th width="10%">
                        Chart
                        @*<div style="margin-left:-4px; margin-bottom:-8px;">
                            @Html.DropDownList("Chart", ViewBag.chartList, "Select to filter chart", new { @class = "form-control-sm border-0 pl-0 ftypes" })
                        </div>*@
                    </th>
                    <th width="30%" class="text-right">
                        
                    </th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Count() > 0)
                {
                    //var i = 0;
                    foreach (var item in Model)
                    {
                        //i++;
                        <tr class="_@item.Category _@item.ChartType.ToLower() itm">
                            <td class="">
                                <span class="text-dark text-bold">@item.ReportName</span>
                                <div class="small text-info">Last generated: @item.DateMigrated</div>
                            </td>
                            <td>
                                @catgL.Find(x => x.RecId == item.Category).Title
                            </td>
                            <td class="text-uppercase">@item.ChartType</td>
                            <td class="text-right">
                                <a href="@Url.ActionLink("Export")/@item.RecId" class="btn btn-outline-success btn-sm" title="View this report">
                                    <i class="fa fa-area-chart"></i>
                                </a>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="4">
                            <h4 class="font-weight-light text-center">-</h4>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

}


@section Scripts{

    <script src="~/assets/vendor/highchart/highcharts.js"></script>
    <script src="~/assets/vendor/highchart/modules/data.js"></script>
    <script src="~/assets/vendor/highchart/modules/exporting.js"></script>
    <script src="~/assets/vendor/highchart/modules/accessibility.js"></script>

    @if (ViewBag.report != null)
    {
        dynamic rpt = ViewBag.report;
        if (rpt["type"] == "bar")
        {
            <script type="text/javascript">
                $().ready(function () {
                    Highcharts.chart('rptChart', {
                        data: { table: 'rptTable' },
                        chart: { type: 'column' },
                        title: { text: '@rpt["title"]' },
                        yAxis: {
                            allowDecimals: false,
                            title: { text: 'Units' }
                        },
                        tooltip: {
                            formatter: function () {
                                return '<b>' + this.series.name + '</b><br />' +
                                    this.point.y + ' ' + this.point.name.toLowerCase();
                            }
                        }
                    });
                });
            </script>
        }
        else if (rpt["type"] == "line")
        {
            <script type="text/javascript">
                $().ready(function () {
                    Highcharts.chart('rptChart', {
                        data: { table: 'rptTable' },
                        chart: { type: 'line' },
                        title: { text: '@rpt["title"]' },
                        yAxis: {
                            title: { text: 'Units' }
                        }
                    });
                });
            </script>
        }
        else if (rpt["type"] == "area")
        {
            <script type="text/javascript">
                $().ready(function () {
                    Highcharts.chart('rptChart', {
                        data: { table: 'rptTable' },
                        chart: { type: 'area' },
                        title: { text: '@rpt["title"]' },
                        xAxis: {
                            allowDecimals: false,
                            //labels: {
                            //    formatter: function () {
                            //        return this.value; // clean, unformatted number for year
                            //    }
                            //},
                            //accessibility: {
                            //    rangeDescription: 'Range: 1940 to 2017.'
                            //}
                        },
                        yAxis: {
                            title: { text: 'Units' }
                        },
                        tooltip: {
                            formatter: function () {
                                return '<b>' + this.series.name + '</b><br />' +
                                    this.point.y + ' ' + this.point.name.toLowerCase();
                            }
                        }
                    });
                });
            </script>
        }
        else if (rpt["type"] == "pie")
        {
            <script type="text/javascript">
                $().ready(function () {
                    Highcharts.chart('rptChart', {
                        data: { table: 'rptTable' },
                        chart: { type: 'pie' },
                        title: { text: '@rpt["title"]' },
                        yAxis: {
                            title: { text: 'Units' }
                        },
                        tooltip: {
                            pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
                        },
                        accessibility: {
                            point: {
                                valueSuffix: '%'
                            }
                        },
                        plotOptions: {
                            pie: {
                                allowPointSelect: true,
                                cursor: 'pointer',
                                dataLabels: {
                                    enabled: true,
                                    format: '<b>{point.name}</b>: {point.percentage:.1f} %'
                                }
                            }
                        }
                    });
                });
            </script>
        }
    }
    <script type="text/javascript">
    $().ready(function () {

            $('.ftypes').change(function () {
                if ($(this).val() == '') {
                    $('.itm').show('slow');
                } else {
                    $('.itm').hide();
                    var cls = "_" + $(this).val().toLowerCase().replace(' ', '_');
                    $('.' + cls).show('slow');
                }
            });
        });
    </script>
}